apiVersion: v1
kind: Namespace
metadata:
  name: ${application.namespace}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ${application.name}-${promotion.environment}
  namespace: ${application.namespace}
  labels:
    app: ${application.name}-${promotion.environment}
spec:
  replicas: ${application.replicas}
  template:
    metadata:
      name: ${application.name}-${promotion.environment}
      namespace: ${application.namespace}
      labels:
        app: ${application.name}-${promotion.environment}
        version: ${application.version}
    spec:
      containers:
      - name: application
        image: ${application.target.ecr}
        env:
        - name: APPLICATION_NAME
          value: ${application.name}
        - name: APPLICATION_VERSION
          value: ${application.version}
        - name: ENVIRONMENT_NAME
          value: ${application.environment.name}
        ports:
        - name: http
          containerPort: ${application.port}
        readinessProbe:
          httpGet:
            path: /status
            port: http
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            path: /status
            port: http
          initialDelaySeconds: 5
          timeoutSeconds: 1
---
apiVersion: v1
kind: Service
metadata:
  name: ${application.name}-${promotion.environment}
  namespace: ${application.namespace}
  labels:
    app: ${application.name}-${promotion.environment}
spec:
  ports:
  - port: 80
    targetPort: http
  selector:
    app: ${application.name}-${promotion.environment}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ${application.name}-${promotion.environment}
  namespace: ${application.namespace}
  labels:
    app: ${application.name}-${promotion.environment}
spec:
  rules:
  - host: ${application.target.fqdn}
    http:
      paths:
      - path: ${application.path}
        backend:
          serviceName: ${application.name}-${promotion.environment}
          servicePort: 80
